#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: nginx
#  namespace: default
#  annotations:
#    kubernetes.io/ingress.class: 'nginx'
#spec:
#  tls:
#    - hosts:
#        - 'test.shixh.com'
#    - secretName: www
#  rules:
#    - host: 'test.shixh.com'
#      http:
#        paths:
#          - backend:
#              serviceName: nginx
#              servicePort: 80
#            path: /
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: default
  labels:
    app: nginx
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: nginx
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: nginx
  namespace: default
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#              - matchExpressions:
#                  - key: failure-domain.beta.kubernetes.io/zone
#                    operator: In
#                    values:
#                      - '800005'
#        podAntiAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            - labelSelector:
#                matchExpressions:
#                  - key: app
#                    operator: In
#                    values:
#                      - nginx
#              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: nginx
          imagePullPolicy: IfNotPresent
          image: openresty/openresty:1.13.6.2-centos
#          resources:
#            limits:
#              cpu: '2'
#              memory: 4Gi
#            requests:
#              cpu: '2'
#              memory: 4Gi
          ports:
            - containerPort: 80
              name: web
              protocol: TCP
#          volumeMounts:
#            - name: volume-data-pvc
#              mountPath: /mnt
#      volumes:
#        - name: volume-data-pvc
#          persistentVolumeClaim:
#            claimName: data-pvc